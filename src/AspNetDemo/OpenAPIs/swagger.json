{
  "openapi": "3.0.1",
  "info": {
    "title": "Passport API",
    "version": "v1"
  },
  "paths": {
    "/api/v1/basic-message": {
      "post": {
        "tags": [
          "BasicMessage"
        ],
        "summary": "Send a message to an identity wallet via an existing connection.",
        "operationId": "SendMessage",
        "requestBody": {
          "description": "The request config",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBasicMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBasicMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBasicMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBasicMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/basic-message/{connectionId}": {
      "get": {
        "tags": [
          "BasicMessage"
        ],
        "summary": "Returns any basic messages received from the connection",
        "operationId": "GetMessages",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "description": "The connection over which the messages were received.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The connection over which the messages were received.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicMessageDetail"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicMessageDetail"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicMessageDetail"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/connection": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "List connections",
        "operationId": "ListConnections",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "Create a connection offer",
        "operationId": "CreateConnection",
        "requestBody": {
          "description": "The connection config",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnectionModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionOfferModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/connection/accept": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "Accept a connection offer",
        "operationId": "AcceptConnection",
        "requestBody": {
          "description": "The connection config",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptConnectionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptConnectionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptConnectionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptConnectionModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionOfferModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/connection/{connectionId}": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get the requested connection details",
        "operationId": "GetConnection",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStateModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connectionId}/status": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get the connection status",
        "operationId": "GetConnectionStatus",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionState"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credential/definition": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Create credential definition",
        "operationId": "CreateCredentialDefinition",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialDefinitionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialDefinitionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialDefinitionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialDefinitionModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "List credential definition Ids",
        "operationId": "ListCredentialDefinition",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/credential/definition/{credentialDefinitionId}": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get a credential definition",
        "operationId": "GetCredentialDefinition",
        "parameters": [
          {
            "name": "credentialDefinitionId",
            "in": "path",
            "description": "The credential definition id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The credential definition id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCredentialDefinitionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCredentialDefinitionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCredentialDefinitionModel"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credential": {
      "post": {
        "tags": [
          "Credential"
        ],
        "summary": "Create a credential offer based on a provided credential definition id.\r\nIf the connectionId is not included, then it will be a connectionless offer and the QR contents will be returned.",
        "operationId": "CreateCredential",
        "requestBody": {
          "description": "The credential config",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialOfferModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialOfferModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialOfferModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialOfferModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialOfferModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialOfferModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialOfferModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/credential/{credentialId}": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get the credential details",
        "operationId": "GetCredential",
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credential/{credentialId}/status": {
      "get": {
        "tags": [
          "Credential"
        ],
        "summary": "Get the credential status",
        "operationId": "GetCredentialStatus",
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialState"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/permission": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Check permissions for an auth token",
        "operationId": "CheckPermission",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionModel"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proof/config": {
      "post": {
        "tags": [
          "Proof"
        ],
        "summary": "Create proof configuration",
        "operationId": "CreateProofConfig",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProofModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProofModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProofModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProofModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "tags": [
          "Proof"
        ],
        "summary": "List ProofConfig Ids",
        "operationId": "ListProofConfig",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/proof/config/{proofConfigId}": {
      "get": {
        "tags": [
          "Proof"
        ],
        "summary": "Get a proof config",
        "operationId": "GetProofConfig",
        "parameters": [
          {
            "name": "proofConfigId",
            "in": "path",
            "description": "The proof config id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The proof config id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProofModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofModel"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Proof"
        ],
        "summary": "Update an existing proof config",
        "operationId": "UpdateProofConfig",
        "parameters": [
          {
            "name": "proofConfigId",
            "in": "path",
            "description": "The proof config id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The proof config id",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The updated proof fields",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProofModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProofModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProofModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProofModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proof": {
      "post": {
        "tags": [
          "Proof"
        ],
        "summary": "Create a proof request based on a provided proof config id.\r\nIf the connectionId is not included, then it will be a connectionless proof and the QR contents will be returned.",
        "operationId": "CreateProof",
        "requestBody": {
          "description": "The request config",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProofRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProofRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProofRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProofRequestModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProofRequestModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofRequestModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofRequestModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proof/{challengeId}": {
      "get": {
        "tags": [
          "Proof"
        ],
        "summary": "Get the requested proof",
        "operationId": "GetProof",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProofStateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofStateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofStateModel"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proof/{challengeId}/status": {
      "get": {
        "tags": [
          "Proof"
        ],
        "summary": "Get the proof status",
        "operationId": "GetProofStatus",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProofState"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofState"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProofState"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schema": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "List schema",
        "operationId": "ListSchema",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "If specified, return only schema with a name or attributes which contain this string",
            "schema": {
              "type": "string",
              "description": "If specified, return only schema with a name or attributes which contain this string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page (zero based)",
            "schema": {
              "type": "integer",
              "description": "Page (zero based)",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Records to return per page",
            "schema": {
              "type": "integer",
              "description": "Records to return per page",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "ownedOnly",
            "in": "query",
            "description": "If true, only return schema created by this wallet.",
            "schema": {
              "type": "boolean",
              "description": "If true, only return schema created by this wallet.",
              "default": false
            }
          },
          {
            "name": "schemaId",
            "in": "query",
            "description": "If specified, only the schema with this identifier is returned.",
            "schema": {
              "type": "string",
              "description": "If specified, only the schema with this identifier is returned.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaListResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schema/{schemaId}": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Get a schema by its Id.",
        "operationId": "GetSchema",
        "parameters": [
          {
            "name": "schemaId",
            "in": "path",
            "description": "The schema id.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The schema id.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NewBasicMessage": {
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BasicMessageDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "sentTime": {
            "type": "string",
            "format": "date-time"
          },
          "receivedTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateConnectionModel": {
        "type": "object",
        "properties": {
          "aliasName": {
            "type": "string",
            "nullable": true
          },
          "aliasIconUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectionOfferModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "contents": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AcceptConnectionModel": {
        "type": "object",
        "properties": {
          "offer": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectionState": {
        "enum": [
          "Invited",
          "Negotiating",
          "Connected"
        ],
        "type": "string"
      },
      "ConnectionStateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "aliasName": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/ConnectionState"
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCredentialDefinitionModel": {
        "type": "object",
        "properties": {
          "schemaId": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCredentialOfferModel": {
        "type": "object",
        "properties": {
          "credentialDefinitionId": {
            "type": "string",
            "nullable": true
          },
          "connectionId": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValue"
            },
            "nullable": true
          },
          "credentialName": {
            "type": "string",
            "nullable": true
          },
          "credentialIconUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CredentialOfferModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "contents": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CredentialState": {
        "enum": [
          "Offered",
          "Requested",
          "Issued",
          "Rejected",
          "Revoked"
        ],
        "type": "string"
      },
      "CredentialModel": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/CredentialState"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "credentialDefinitionId": {
            "type": "string",
            "nullable": true
          },
          "schemaId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionModel": {
        "type": "object",
        "properties": {
          "canIssue": {
            "type": "boolean"
          },
          "canProof": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AttributeRestrictions": {
        "type": "object",
        "properties": {
          "schemaId": {
            "type": "string",
            "nullable": true
          },
          "schemaName": {
            "type": "string",
            "nullable": true
          },
          "credDefId": {
            "type": "string",
            "nullable": true
          },
          "issuerDid": {
            "type": "string",
            "nullable": true
          },
          "schemaIssuerDid": {
            "type": "string",
            "nullable": true
          },
          "schemaVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProofAttributeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "schemaId": {
            "type": "string",
            "nullable": true
          },
          "schemaName": {
            "type": "string",
            "nullable": true
          },
          "credDefId": {
            "type": "string",
            "nullable": true
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeRestrictions"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProofModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProofAttributeModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProofRequestModel": {
        "type": "object",
        "properties": {
          "proofConfigId": {
            "type": "string",
            "nullable": true
          },
          "connectionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProofRequestModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "requestUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProofState": {
        "enum": [
          "Accepted",
          "Rejected",
          "Requested",
          "Invalid"
        ],
        "type": "string"
      },
      "RequestedAttributeValue": {
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProofStateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/ProofState"
          },
          "requestedAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProofAttributeModel"
            },
            "nullable": true
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestedAttributeValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchemaModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchemaListResult": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemaModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}